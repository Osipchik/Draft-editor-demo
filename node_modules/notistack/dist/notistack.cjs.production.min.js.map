{"version":3,"file":"notistack.cjs.production.min.js","sources":["../src/SnackbarContext.ts","../src/utils/constants.ts","../src/SnackbarItem/SnackbarItem.util.ts","../src/utils/createChainedFunction.js","../src/SnackbarItem/SnackbarItem.tsx","../src/SnackbarContainer.tsx","../src/utils/defaultIconVariants.tsx","../src/SnackbarProvider.tsx","../src/useSnackbar.ts","../src/withSnackbar.js"],"sourcesContent":["import React from 'react';\nimport { ProviderContext } from '.';\n\n// @ts-ignore\nexport default React.createContext<ProviderContext>();\n","import { SnackbarClassKey } from '@material-ui/core/Snackbar';\nimport { CloseReason, ContainerClassKey, SnackbarProviderProps } from '../index';\nimport { SnackbarItemProps } from '../SnackbarItem';\nimport { Snack } from '../SnackbarProvider';\n\nexport const allClasses: {\n    mui: Record<SnackbarClassKey, {}>;\n    container: Record<ContainerClassKey, {}>;\n} = {\n    mui: {\n        root: {},\n        anchorOriginTopCenter: {},\n        anchorOriginBottomCenter: {},\n        anchorOriginTopRight: {},\n        anchorOriginBottomRight: {},\n        anchorOriginTopLeft: {},\n        anchorOriginBottomLeft: {},\n    },\n    container: {\n        containerRoot: {},\n        containerAnchorOriginTopCenter: {},\n        containerAnchorOriginBottomCenter: {},\n        containerAnchorOriginTopRight: {},\n        containerAnchorOriginBottomRight: {},\n        containerAnchorOriginTopLeft: {},\n        containerAnchorOriginBottomLeft: {},\n    },\n};\n\nexport const MESSAGES = {\n    NO_PERSIST_ALL: 'WARNING - notistack: Reached maxSnack while all enqueued snackbars have \\'persist\\' flag. Notistack will dismiss the oldest snackbar anyway to allow other ones in the queue to be presented.',\n};\n\nexport const SNACKBAR_INDENTS = {\n    view: { default: 20, dense: 4 },\n    snackbar: { default: 6, dense: 2 },\n};\n\nexport const capitalise = (text: string): string => text.charAt(0).toUpperCase() + text.slice(1);\n\nexport const originKeyExtractor = (anchor: Snack['anchorOrigin']): string => (\n    `${capitalise(anchor.vertical)}${capitalise(anchor.horizontal)}`\n);\n\n/**\n * Omit SnackbarContainer class keys that are not needed for SnackbarItem\n */\nexport const omitContainerKeys = (classes: SnackbarProviderProps['classes']): SnackbarItemProps['classes'] => (\n    // @ts-ignore\n    Object.keys(classes).filter(key => !allClasses.container[key]).reduce((obj, key) => ({ ...obj, [key]: classes[key] }), {})\n);\n\nexport const DEFAULTS = {\n    variant: 'default',\n    autoHideDuration: 5000,\n    anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'left',\n    },\n};\n\nconst numberOrNull = (numberish?: number | null) => (\n    typeof numberish === 'number' || numberish === null\n);\n\n// @ts-ignore\nexport const merge = (options, props, defaults) => (name: keyof Snack): any => {\n    if (name === 'autoHideDuration') {\n        if (numberOrNull(options.autoHideDuration)) return options.autoHideDuration;\n        if (numberOrNull(props.autoHideDuration)) return props.autoHideDuration;\n        return DEFAULTS.autoHideDuration;\n    }\n\n    return options[name] || props[name] || defaults[name];\n};\n\nexport const REASONS: { [key: string]: CloseReason } = {\n    CLICKAWAY: 'clickaway',\n    MAXSNACK: 'maxsnack',\n    INSTRUCTED: 'instructed',\n};\n","import clsx from 'clsx';\nimport { SnackbarProps } from '@material-ui/core/Snackbar';\nimport { allClasses } from '../utils/constants';\nimport { SnackbarItemProps } from './SnackbarItem';\nimport { Snack } from '../SnackbarProvider';\n\nconst DIRECTION = {\n    right: 'left',\n    left: 'right',\n    bottom: 'up',\n    top: 'down',\n} as const;\nexport type DirectionType = typeof DIRECTION[keyof typeof DIRECTION]\n\nexport const getTransitionDirection = (anchorOrigin: Snack['anchorOrigin']): DirectionType => {\n    if (anchorOrigin.horizontal !== 'center') {\n        return DIRECTION[anchorOrigin.horizontal];\n    }\n    return DIRECTION[anchorOrigin.vertical];\n};\n\n/**\n * Omit all class keys except those allowed in material-ui snackbar\n */\nexport const omitNonMuiKeys: (classes: { wrappedRoot: string } & SnackbarProps['classes']) => SnackbarProps['classes'] = (classes) => {\n    const snackbarMuiClasses = Object.keys(classes)\n        // @ts-ignore\n        .filter(key => allClasses.mui[key] !== undefined).reduce((obj, key) => ({ ...obj, [key]: classes[key] }), {});\n\n    return {\n        ...snackbarMuiClasses,\n        root: clsx(classes.root, classes.wrappedRoot),\n    };\n};\n\n/**\n * Omit all class keys except what we need for collapse component\n */\nexport const omitNonCollapseKeys = (classes: SnackbarItemProps['classes'], dense: SnackbarItemProps['dense']): { container: string; wrapper: string } => ({\n    container: classes.collapseContainer,\n    wrapper: clsx(classes.collapseWrapper, { [classes.collapseWrapperDense]: dense }),\n});\n","/**\n * @link https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/utils/createChainedFunction.js\n */\nexport default function createChainedFunction(funcs, extraArg) {\n    return funcs.reduce((acc, func) => {\n        if (func == null) return acc;\n\n        if (process.env.NODE_ENV !== 'production') {\n            if (typeof func !== 'function') {\n                // eslint-disable-next-line no-console\n                console.error('Invalid Argument Type. must only provide functions, undefined, or null.');\n            }\n        }\n\n        return function chainedFunction(...args) {\n            const argums = [...args];\n            if (extraArg && argums.indexOf(extraArg) === -1) {\n                argums.push(extraArg);\n            }\n            acc.apply(this, argums);\n            func.apply(this, argums);\n        };\n    }, () => { });\n}\n","import React, { useState, useEffect, useRef } from 'react';\nimport clsx from 'clsx';\nimport { withStyles, WithStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Slide from '@material-ui/core/Slide';\nimport Collapse from '@material-ui/core/Collapse';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport { getTransitionDirection, omitNonMuiKeys, omitNonCollapseKeys } from './SnackbarItem.util';\nimport { capitalise, allClasses, REASONS, SNACKBAR_INDENTS } from '../utils/constants';\nimport { SnackbarProviderProps, OptionalBy, SharedProps, RequiredBy, IconVariant, VariantClassKey, TransitionHandlerProps } from '../index';\nimport { Snack } from '../SnackbarProvider';\nimport createChainedFunction from '../utils/createChainedFunction';\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nconst styles = (theme: Theme) => createStyles({\n    ...allClasses.mui,\n    lessPadding: {\n        paddingLeft: 8 * 2.5,\n    },\n    variantSuccess: {\n        backgroundColor: '#43a047', // green\n        color: '#fff',\n    },\n    variantError: {\n        backgroundColor: '#d32f2f', // dark red\n        color: '#fff',\n    },\n    variantInfo: {\n        backgroundColor: '#2196f3', // nice blue\n        color: '#fff',\n    },\n    variantWarning: {\n        backgroundColor: '#ff9800', // amber\n        color: '#fff',\n    },\n    message: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    wrappedRoot: {\n        position: 'relative',\n        transform: 'translateX(0)',\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n    },\n    collapseContainer: {\n        [theme.breakpoints.down('xs')]: {\n            paddingLeft: theme.spacing(1),\n            paddingRight: theme.spacing(1),\n        },\n    },\n    collapseWrapper: {\n        transition: theme.transitions.create(['margin-bottom'], { easing: 'ease' }),\n        marginTop: SNACKBAR_INDENTS.snackbar.default,\n        marginBottom: SNACKBAR_INDENTS.snackbar.default,\n    },\n    collapseWrapperDense: {\n        marginTop: SNACKBAR_INDENTS.snackbar.dense,\n        marginBottom: SNACKBAR_INDENTS.snackbar.dense,\n    },\n});\n\n\ntype RemovedProps =\n    /** the one received from Provider is processed and passed to snack prop */\n    | 'variant'\n    /** same as above */\n    | 'anchorOrigin'\n    /** the one recevied from enqueueSnackbar is processed in provider, therefore shouldn't be passed to SnackbarItem */\n    | 'preventDuplicate'\n\n\nexport interface SnackbarItemProps extends WithStyles<typeof styles>, RequiredBy<Omit<SharedProps, RemovedProps>, 'onEntered' | 'onExited' | 'onClose'> {\n    snack: Snack;\n    dense: SnackbarProviderProps['dense'];\n    iconVariant: OptionalBy<IconVariant, 'default'>;\n    hideIconVariant: SnackbarProviderProps['hideIconVariant'];\n}\n\nconst SnackbarItem: React.FC<SnackbarItemProps> = ({ classes, ...props }) => {\n    const timeout = useRef<ReturnType<typeof setTimeout>>();\n    const [collapsed, setCollapsed] = useState(true);\n\n    useEffect(() => (): void => {\n        if (timeout.current) {\n            clearTimeout(timeout.current);\n        }\n    }, []);\n\n    const handleClose = createChainedFunction([props.snack.onClose, props.onClose], props.snack.key);\n\n    const handleEntered: TransitionHandlerProps['onEntered'] = () => {\n        if (props.snack.requestClose) {\n            handleClose(null, REASONS.INSTRCUTED);\n        }\n    };\n\n    const handleExitedScreen = (): void => {\n        timeout.current = setTimeout(() => {\n            setCollapsed(!collapsed);\n        }, 125);\n    };\n\n    const callbacks: { [key in keyof TransitionHandlerProps]?: any } =\n        ['onEnter', 'onEntering', 'onEntered', 'onExit', 'onExiting', 'onExited'].reduce((acc, cbName) => ({\n            ...acc,\n            // @ts-ignore\n            [cbName]: createChainedFunction([props.snack[cbName], props[cbName]], props.snack.key),\n        }), {});\n\n    const {\n        action,\n        content,\n        ContentProps = {},\n        hideIconVariant,\n        iconVariant,\n        snack,\n        dense,\n        TransitionComponent = Slide,\n        TransitionProps: otherTransitionProps = {},\n        ...other\n    } = props;\n\n    const { action: contentAction, className, ...otherContentProps } = ContentProps;\n\n    const {\n        key,\n        persist,\n        entered,\n        requestClose,\n        variant,\n        content: singleContent,\n        action: singleAction,\n        ContentProps: singleContentProps = {},\n        anchorOrigin,\n        TransitionProps: singleTransitionProps = {},\n        ...singleSnackProps\n    } = snack;\n\n    const icon = iconVariant[variant];\n\n    const contentProps = {\n        ...otherContentProps,\n        ...singleContentProps,\n        action: singleAction || singleContentProps.action || contentAction || action,\n    };\n\n    const transitionProps = {\n        direction: getTransitionDirection(anchorOrigin),\n        ...otherTransitionProps,\n        ...singleTransitionProps,\n        onExited: handleExitedScreen,\n    };\n\n    const ariaDescribedby = contentProps['aria-describedby'] || 'client-snackbar';\n\n    let finalAction = contentProps.action;\n    if (typeof finalAction === 'function') {\n        // @ts-ignore\n        finalAction = contentProps.action(key);\n    }\n\n    let snackContent = singleContent || content;\n    if (snackContent && typeof snackContent === 'function') {\n        snackContent = snackContent(key, snack.message);\n    }\n\n    return (\n        <Collapse\n            unmountOnExit\n            timeout={175}\n            in={collapsed}\n            classes={omitNonCollapseKeys(classes, dense)}\n            onExited={callbacks.onExited}\n        >\n            {/*\n            // @ts-ignore */}\n            <Snackbar\n                // @ts-ignore\n                TransitionComponent={TransitionComponent}\n                {...other}\n                {...singleSnackProps}\n                open={snack.open}\n                anchorOrigin={anchorOrigin}\n                TransitionProps={transitionProps}\n                classes={omitNonMuiKeys(classes)}\n                onClose={handleClose}\n                onExit={callbacks.onExit}\n                onExiting={callbacks.onExiting}\n                onEnter={callbacks.onEnter}\n                onEntering={callbacks.onEntering}\n                // order matters. first callbacks.onEntered to set entered: true,\n                // then handleEntered to check if there's a request for closing\n                onEntered={createChainedFunction([callbacks.onEntered, handleEntered])}\n            >\n                {/* @ts-ignore */}\n                {snackContent || (\n                    <SnackbarContent\n                        className={clsx(\n                            classes[`variant${capitalise(variant)}` as VariantClassKey],\n                            { [classes.lessPadding]: !hideIconVariant && icon },\n                            className,\n                        )}\n                        {...contentProps}\n                        aria-describedby={ariaDescribedby}\n                        message={(\n                            <span id={ariaDescribedby} className={classes.message}>\n                                {!hideIconVariant ? icon : null}\n                                {snack.message}\n                            </span>\n                        )}\n                        action={finalAction}\n                    />\n                )}\n            </Snackbar>\n        </Collapse>\n    );\n};\n\nexport default withStyles(styles)(SnackbarItem);\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { SNACKBAR_INDENTS } from './utils/constants';\nimport { SnackbarProviderProps } from '.';\n\nconst useStyle = makeStyles(theme => ({\n    root: {\n        boxSizing: 'border-box',\n        display: 'flex',\n        maxHeight: '100%',\n        maxWidth: '100%',\n        position: 'fixed',\n        flexDirection: 'column',\n        zIndex: theme.zIndex.snackbar,\n        height: 'auto',\n        width: 'auto',\n        minWidth: 288,\n        transition: theme.transitions.create(['top', 'right', 'bottom', 'left'], { easing: 'ease' }),\n        [theme.breakpoints.down('xs')]: {\n            left: '0 !important',\n            right: '0 !important',\n            width: '100%',\n        },\n    },\n    reverseColumns: { flexDirection: 'column-reverse' },\n\n    top: { top: SNACKBAR_INDENTS.view.default - SNACKBAR_INDENTS.snackbar.default },\n    topDense: { top: SNACKBAR_INDENTS.view.dense - SNACKBAR_INDENTS.snackbar.dense },\n\n    bottom: { bottom: SNACKBAR_INDENTS.view.default - SNACKBAR_INDENTS.snackbar.default },\n    bottomDense: { bottom: SNACKBAR_INDENTS.view.dense - SNACKBAR_INDENTS.snackbar.dense },\n\n    left: { left: SNACKBAR_INDENTS.view.default },\n    leftDense: { left: SNACKBAR_INDENTS.view.dense },\n\n    right: { right: SNACKBAR_INDENTS.view.default },\n    rightDense: { right: SNACKBAR_INDENTS.view.dense },\n\n    center: {\n        left: '50%',\n        transform: 'translateX(-50%)',\n        [theme.breakpoints.down('xs')]: {\n            transform: 'translateX(0)',\n        },\n    },\n}));\n\n\ninterface SnackbarContainerProps {\n    children: JSX.Element | JSX.Element[];\n    className?: string;\n    dense: SnackbarProviderProps['dense'];\n    anchorOrigin: NonNullable<SnackbarProviderProps['anchorOrigin']>;\n}\n\nconst SnackbarContainer: React.FC<SnackbarContainerProps> = (props) => {\n    const classes = useStyle();\n    const { className, anchorOrigin, dense, ...other } = props;\n\n    const combinedClassname = clsx(\n        classes.root,\n        classes[anchorOrigin.vertical],\n        classes[anchorOrigin.horizontal],\n        // @ts-ignore\n        classes[`${anchorOrigin.vertical}${dense ? 'Dense' : ''}`],\n        // @ts-ignore\n        classes[`${anchorOrigin.horizontal}${dense ? 'Dense' : ''}`],\n        { [classes.reverseColumns]: anchorOrigin.vertical === 'bottom' },\n        className,\n    );\n\n    return (\n        <div className={combinedClassname} {...other} />\n    );\n};\n\nexport default React.memo(SnackbarContainer);\n","import React from 'react';\nimport SvgIcon, { SvgIconProps } from '@material-ui/core/SvgIcon';\nimport { IconVariant } from '../index';\n\ntype Icon = (props: SvgIconProps) => JSX.Element;\n\nconst CheckIcon: Icon = props => (\n    <SvgIcon {...props}>\n        <path d=\"M12 2C6.5 2 2 6.5 2 12S6.5 22 12 22 22 17.5 22 12 17.5 2 12 2M10 17L5 12L6.41\n        10.59L10 14.17L17.59 6.58L19 8L10 17Z\" />\n    </SvgIcon>\n);\n\nconst WarningIcon: Icon = props => (\n    <SvgIcon {...props}>\n        <path d=\"M13,14H11V10H13M13,18H11V16H13M1,21H23L12,2L1,21Z\" />\n    </SvgIcon>\n);\n\nconst ErrorIcon: Icon = props => (\n    <SvgIcon {...props}>\n        <path d=\"M12,2C17.53,2 22,6.47 22,12C22,17.53 17.53,22 12,22C6.47,22 2,17.53 2,12C2,\n        6.47 6.47,2 12,2M15.59,7L12,10.59L8.41,7L7,8.41L10.59,12L7,15.59L8.41,17L12,\n        13.41L15.59,17L17,15.59L13.41,12L17,8.41L15.59,7Z\" />\n    </SvgIcon>\n);\n\nconst InfoIcon: Icon = props => (\n    <SvgIcon {...props}>\n        <path d=\"M13,9H11V7H13M13,17H11V11H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,\n        0 22,12A10,10 0 0,0 12,2Z\" />\n    </SvgIcon>\n);\n\nconst iconStyles = {\n    fontSize: 20,\n    marginInlineEnd: 8,\n};\n\nconst defaultIconVariants: Omit<IconVariant, 'default'> = {\n    success: <CheckIcon style={iconStyles} />,\n    warning: <WarningIcon style={iconStyles} />,\n    error: <ErrorIcon style={iconStyles} />,\n    info: <InfoIcon style={iconStyles} />,\n};\n\nexport default defaultIconVariants;\n","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport clsx from 'clsx';\nimport SnackbarContext from './SnackbarContext';\nimport { MESSAGES, REASONS, originKeyExtractor, omitContainerKeys, merge, DEFAULTS } from './utils/constants';\nimport SnackbarItem from './SnackbarItem';\nimport SnackbarContainer from './SnackbarContainer';\nimport warning from './utils/warning';\nimport defaultIconVariants from './utils/defaultIconVariants';\nimport { SnackbarProviderProps, ContainerClassKey, SnackbarKey, SnackbarMessage, OptionsObject, RequiredBy, ProviderContext, TransitionHandlerProps } from '.';\nimport createChainedFunction from './utils/createChainedFunction';\n\n\ntype Reducer = (state: State) => State;\ntype SnacksByPosition = { [key: string]: Snack[] };\n\nexport interface Snack extends RequiredBy<OptionsObject, 'key' | 'variant' | 'anchorOrigin'> {\n    message: SnackbarMessage;\n    open: boolean;\n    entered: boolean;\n    requestClose: boolean;\n}\n\ninterface State {\n    snacks: Snack[];\n    queue: Snack[];\n    contextValue: ProviderContext;\n}\n\nclass SnackbarProvider extends Component<SnackbarProviderProps, State> {\n    constructor(props: SnackbarProviderProps) {\n        super(props);\n        this.state = {\n            snacks: [],\n            queue: [], // eslint-disable-line react/no-unused-state\n            contextValue: {\n                enqueueSnackbar: this.enqueueSnackbar,\n                closeSnackbar: this.closeSnackbar,\n            },\n        };\n    }\n\n    get maxSnack(): number {\n        return this.props.maxSnack || 3;\n    }\n\n    /**\n     * Adds a new snackbar to the queue to be presented.\n     * Returns generated or user defined key referencing the new snackbar or null\n     */\n    enqueueSnackbar = (message: SnackbarMessage, { key, preventDuplicate, ...options }: OptionsObject = {}): SnackbarKey => {\n        const hasSpecifiedKey = key || key === 0;\n        const id = hasSpecifiedKey ? (key as SnackbarKey) : new Date().getTime() + Math.random();\n\n        const merger = merge(options, this.props, DEFAULTS);\n        const snack: Snack = {\n            key: id,\n            ...options,\n            message,\n            open: true,\n            entered: false,\n            requestClose: false,\n            variant: merger('variant'),\n            anchorOrigin: merger('anchorOrigin'),\n            autoHideDuration: merger('autoHideDuration'),\n        };\n\n        if (options.persist) {\n            snack.autoHideDuration = undefined;\n        }\n\n        this.setState((state) => {\n            if ((preventDuplicate === undefined && this.props.preventDuplicate) || preventDuplicate) {\n                const compareFunction = (item: Snack): boolean => (\n                    hasSpecifiedKey ? item.key === key : item.message === message\n                );\n\n                const inQueue = state.queue.findIndex(compareFunction) > -1;\n                const inView = state.snacks.findIndex(compareFunction) > -1;\n                if (inQueue || inView) {\n                    return state;\n                }\n            }\n\n            return this.handleDisplaySnack({\n                ...state,\n                queue: [...state.queue, snack],\n            });\n        });\n\n        return id;\n    };\n\n    /**\n     * Reducer: Display snack if there's space for it. Otherwise, immediately\n     * begin dismissing the oldest message to start showing the new one.\n     */\n    handleDisplaySnack: Reducer = (state) => {\n        const { snacks } = state;\n        if (snacks.length >= this.maxSnack) {\n            return this.handleDismissOldest(state);\n        }\n        return this.processQueue(state);\n    };\n\n    /**\n     * Reducer: Display items (notifications) in the queue if there's space for them.\n     */\n    processQueue: Reducer = (state) => {\n        const { queue, snacks } = state;\n        if (queue.length > 0) {\n            return {\n                ...state,\n                snacks: [...snacks, queue[0]],\n                queue: queue.slice(1, queue.length),\n            };\n        }\n        return state;\n    };\n\n    /**\n     * Reducer: Hide oldest snackbar on the screen because there exists a new one which we have to display.\n     * (ignoring the one with 'persist' flag. i.e. explicitly told by user not to get dismissed).\n     *\n     * Note 1: If there is already a message leaving the screen, no new messages are dismissed.\n     * Note 2: If the oldest message has not yet entered the screen, only a request to close the\n     *         snackbar is made. Once it entered the screen, it will be immediately dismissed.\n     */\n    handleDismissOldest: Reducer = (state) => {\n        if (state.snacks.some(item => !item.open || item.requestClose)) {\n            return state;\n        }\n\n        let popped = false;\n        let ignore = false;\n\n        const persistentCount = state.snacks.reduce((acc, current) => (\n            acc + (current.open && current.persist ? 1 : 0)\n        ), 0);\n\n        if (persistentCount === this.maxSnack) {\n            warning(MESSAGES.NO_PERSIST_ALL);\n            ignore = true;\n        }\n\n        const snacks = state.snacks.map((item) => {\n            if (!popped && (!item.persist || ignore)) {\n                popped = true;\n\n                if (!item.entered) {\n                    return {\n                        ...item,\n                        requestClose: true,\n                    };\n                }\n\n                if (item.onClose) item.onClose(null, REASONS.MAXSNACK, item.key);\n                if (this.props.onClose) this.props.onClose(null, REASONS.MAXSNACK, item.key);\n\n                return {\n                    ...item,\n                    open: false,\n                };\n            }\n\n            return { ...item };\n        });\n\n        return { ...state, snacks };\n    };\n\n    /**\n     * Set the entered state of the snackbar with the given key.\n     */\n    handleEnteredSnack: TransitionHandlerProps['onEntered'] = (node, isAppearing, key) => {\n        if (!key) {\n            throw new Error('handleEnteredSnack Cannot be called with undefined key');\n        }\n\n        this.setState(({ snacks }) => ({\n            snacks: snacks.map(item => (\n                item.key === key ? { ...item, entered: true } : { ...item }\n            )),\n        }));\n    }\n\n    /**\n     * Hide a snackbar after its timeout.\n     */\n    handleCloseSnack: TransitionHandlerProps['onClose'] = (event, reason, key) => {\n        if (this.props.onClose) {\n            this.props.onClose(event, reason, key);\n        }\n\n        if (reason === REASONS.CLICKAWAY) return;\n        const shouldCloseAll = key === undefined;\n\n        this.setState(({ snacks, queue }) => ({\n            snacks: snacks.map((item) => {\n                if (!shouldCloseAll && item.key !== key) {\n                    return { ...item };\n                }\n\n                return item.entered\n                    ? { ...item, open: false }\n                    : { ...item, requestClose: true };\n            }),\n            queue: queue.filter(item => item.key !== key), // eslint-disable-line react/no-unused-state\n        }));\n    };\n\n    /**\n     * Close snackbar with the given key\n     */\n    closeSnackbar: ProviderContext['closeSnackbar'] = (key) => {\n        // call individual snackbar onClose callback passed through options parameter\n        const toBeClosed = this.state.snacks.find(item => item.key === key);\n        if (key && toBeClosed && toBeClosed.onClose) {\n            toBeClosed.onClose(null, REASONS.INSTRUCTED, key);\n        }\n\n        this.handleCloseSnack(null, REASONS.INSTRUCTED, key);\n    }\n\n    /**\n     * When we set open attribute of a snackbar to false (i.e. after we hide a snackbar),\n     * it leaves the screen and immediately after leaving animation is done, this method\n     * gets called. We remove the hidden snackbar from state and then display notifications\n     * waiting in the queue (if any). If after this process the queue is not empty, the\n     * oldest message is dismissed.\n     */\n    // @ts-ignore\n    handleExitedSnack: TransitionHandlerProps['onExited'] = (event, key1, key2) => {\n        const key = key1 || key2;\n        if (!key) {\n            throw new Error('handleExitedSnack Cannot be called with undefined key');\n        }\n\n        this.setState((state) => {\n            const newState = this.processQueue({\n                ...state,\n                snacks: state.snacks.filter(item => item.key !== key),\n            });\n\n            if (newState.queue.length === 0) {\n                return newState;\n            }\n\n            return this.handleDismissOldest(newState);\n        });\n    };\n\n    render(): JSX.Element {\n        const { contextValue } = this.state;\n        const {\n            variant,\n            maxSnack,\n            anchorOrigin,\n            preventDuplicate,\n            domRoot,\n            children,\n            classes = {},\n            dense = false,\n            hideIconVariant = false,\n            ...props\n        } = this.props;\n\n        const categ = this.state.snacks.reduce<SnacksByPosition>((acc, current) => {\n            const category = originKeyExtractor(current.anchorOrigin);\n            const existingOfCategory = acc[category] || [];\n            return {\n                ...acc,\n                [category]: [...existingOfCategory, current],\n            };\n        }, {});\n\n        const iconVariant = {\n            ...defaultIconVariants,\n            ...this.props.iconVariant,\n        };\n\n        const snackbars = Object.keys(categ).map((origin) => {\n            const snacks = categ[origin];\n            return (\n                <SnackbarContainer\n                    key={origin}\n                    dense={dense}\n                    anchorOrigin={snacks[0].anchorOrigin}\n                    className={clsx(\n                        classes.containerRoot,\n                        classes[`containerAnchorOrigin${origin}` as ContainerClassKey],\n                    )}\n                >\n                    {snacks.map(snack => (\n                        <SnackbarItem\n                            {...props}\n                            key={snack.key}\n                            dense={dense}\n                            snack={snack}\n                            hideIconVariant={hideIconVariant}\n                            iconVariant={iconVariant}\n                            classes={omitContainerKeys(classes)}\n                            onClose={this.handleCloseSnack}\n                            onExited={createChainedFunction([this.handleExitedSnack, this.props.onExited])}\n                            onEntered={createChainedFunction([this.handleEnteredSnack, this.props.onEntered])}\n                        />\n                    ))}\n                </SnackbarContainer>\n            );\n        });\n\n        return (\n            <SnackbarContext.Provider value={contextValue}>\n                {children}\n                {domRoot ? createPortal(snackbars, domRoot) : snackbars}\n            </SnackbarContext.Provider>\n        );\n    }\n}\n\nexport default SnackbarProvider;\n","import { useContext } from 'react';\nimport SnackbarContext from './SnackbarContext';\nimport { ProviderContext } from '.';\n\nexport default (): ProviderContext => useContext(SnackbarContext);\n","import React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport getDisplayName from './utils/getDisplayName';\nimport SnackbarContext from './SnackbarContext';\n\nconst withSnackbar = (Component) => {\n    const WrappedComponent = React.forwardRef((props, ref) => (\n        <SnackbarContext.Consumer>\n            {context => (\n                <Component\n                    {...props}\n                    ref={ref}\n                    enqueueSnackbar={context.enqueueSnackbar}\n                    closeSnackbar={context.closeSnackbar}\n                />\n            )}\n        </SnackbarContext.Consumer>\n    ));\n\n    if (process.env.NODE_ENV !== 'production') {\n        WrappedComponent.displayName = `WithSnackbar(${getDisplayName(Component)})`;\n    }\n\n    hoistNonReactStatics(WrappedComponent, Component);\n\n    return WrappedComponent;\n};\n\nexport default withSnackbar;\n"],"names":["React","createContext","allClasses","root","anchorOriginTopCenter","anchorOriginBottomCenter","anchorOriginTopRight","anchorOriginBottomRight","anchorOriginTopLeft","anchorOriginBottomLeft","containerRoot","containerAnchorOriginTopCenter","containerAnchorOriginBottomCenter","containerAnchorOriginTopRight","containerAnchorOriginBottomRight","containerAnchorOriginTopLeft","containerAnchorOriginBottomLeft","capitalise","text","charAt","toUpperCase","slice","omitContainerKeys","classes","Object","keys","filter","key","reduce","obj","DEFAULTS","variant","autoHideDuration","anchorOrigin","vertical","horizontal","numberOrNull","numberish","REASONS","CLICKAWAY","MAXSNACK","INSTRUCTED","DIRECTION","right","left","bottom","top","getTransitionDirection","omitNonMuiKeys","snackbarMuiClasses","undefined","clsx","wrappedRoot","omitNonCollapseKeys","dense","container","collapseContainer","wrapper","collapseWrapper","collapseWrapperDense","createChainedFunction","funcs","extraArg","acc","func","args","argums","indexOf","push","apply","this","styles","theme","createStyles","lessPadding","paddingLeft","variantSuccess","backgroundColor","color","variantError","variantInfo","variantWarning","message","display","alignItems","position","transform","breakpoints","down","spacing","paddingRight","transition","transitions","create","easing","marginTop","marginBottom","SnackbarItem","props","timeout","useRef","useState","collapsed","setCollapsed","useEffect","current","clearTimeout","handleClose","snack","onClose","callbacks","cbName","action","content","ContentProps","hideIconVariant","iconVariant","TransitionComponent","Slide","TransitionProps","otherTransitionProps","other","contentAction","className","otherContentProps","persist","singleContent","singleAction","singleContentProps","singleTransitionProps","singleSnackProps","icon","contentProps","transitionProps","direction","onExited","setTimeout","ariaDescribedby","finalAction","snackContent","Collapse","unmountOnExit","Snackbar","open","onExit","onExiting","onEnter","onEntering","onEntered","requestClose","INSTRCUTED","SnackbarContent","id","withStyles","useStyle","makeStyles","boxSizing","maxHeight","maxWidth","flexDirection","zIndex","snackbar","height","width","minWidth","reverseColumns","SNACKBAR_INDENTS","topDense","bottomDense","leftDense","rightDense","center","SnackbarContainer","combinedClassname","memo","CheckIcon","SvgIcon","d","WarningIcon","ErrorIcon","InfoIcon","iconStyles","fontSize","marginInlineEnd","defaultIconVariants","success","style","warning","error","info","preventDuplicate","options","hasSpecifiedKey","Date","getTime","Math","random","merger","defaults","name","merge","_this","entered","setState","state","compareFunction","item","inQueue","queue","findIndex","inView","snacks","handleDisplaySnack","length","maxSnack","handleDismissOldest","processQueue","some","popped","ignore","map","node","isAppearing","Error","event","reason","shouldCloseAll","toBeClosed","find","handleCloseSnack","key1","key2","newState","contextValue","enqueueSnackbar","closeSnackbar","render","domRoot","children","categ","anchor","category","snackbars","origin","_this2","handleExitedSnack","handleEnteredSnack","SnackbarContext","Provider","value","createPortal","Component","useContext","WrappedComponent","forwardRef","ref","Consumer","context","hoistNonReactStatics"],"mappings":"+0BAIA,MAAeA,EAAMC,gBCCRC,EAIJ,CACDC,KAAM,GACNC,sBAAuB,GACvBC,yBAA0B,GAC1BC,qBAAsB,GACtBC,wBAAyB,GACzBC,oBAAqB,GACrBC,uBAAwB,IAXnBP,EAaE,CACPQ,cAAe,GACfC,+BAAgC,GAChCC,kCAAmC,GACnCC,8BAA+B,GAC/BC,iCAAkC,GAClCC,6BAA8B,GAC9BC,gCAAiC,IAa5BC,EAAa,SAACC,UAAyBA,EAAKC,OAAO,GAAGC,cAAgBF,EAAKG,MAAM,IASjFC,EAAoB,SAACC,UAE9BC,OAAOC,KAAKF,GAASG,QAAO,SAAAC,UAAQzB,EAAqByB,MAAMC,QAAO,SAACC,EAAKF,qBAAcE,UAAMF,GAAMJ,EAAQI,SAAS,KAG9GG,EAAW,CACpBC,QAAS,UACTC,iBAAkB,IAClBC,aAAc,CACVC,SAAU,SACVC,WAAY,SAIdC,EAAe,SAACC,SACG,iBAAdA,GAAwC,OAAdA,GAcxBC,EAA0C,CACnDC,UAAW,YACXC,SAAU,WACVC,WAAY,cCzEVC,EAAY,CACdC,MAAO,OACPC,KAAM,QACNC,OAAQ,KACRC,IAAK,QAIIC,EAAyB,SAACd,SACH,WAA5BA,EAAaE,WACNO,EAAUT,EAAaE,YAE3BO,EAAUT,EAAaC,WAMrBc,EAA4G,SAACzB,OAChH0B,EAAqBzB,OAAOC,KAAKF,GAElCG,QAAO,SAAAC,eAA+BuB,IAAxBhD,EAAeyB,MAAoBC,QAAO,SAACC,EAAKF,qBAAcE,UAAMF,GAAMJ,EAAQI,SAAS,gBAGvGsB,GACH9C,KAAMgD,EAAK5B,EAAQpB,KAAMoB,EAAQ6B,gBAO5BC,EAAsB,SAAC9B,EAAuC+B,SAA+E,CACtJC,UAAWhC,EAAQiC,kBACnBC,QAASN,EAAK5B,EAAQmC,gBAAmDJ,GAA/B/B,EAAQoC,wBCrCvC,SAASC,EAAsBC,EAAOC,UAC1CD,EAAMjC,QAAO,SAACmC,EAAKC,UACV,MAARA,EAAqBD,EASlB,sCAA4BE,2BAAAA,sBACzBC,YAAaD,GACfH,IAA0C,IAA9BI,EAAOC,QAAQL,IAC3BI,EAAOE,KAAKN,GAEhBC,EAAIM,MAAMC,KAAMJ,GAChBF,EAAKK,MAAMC,KAAMJ,OAEtB,eCRP,IAAMK,EAAS,SAACC,gBAAiBC,oBAC1BvE,GACHwE,YAAa,CACTC,YAAa,IAEjBC,eAAgB,CACZC,gBAAiB,UACjBC,MAAO,QAEXC,aAAc,CACVF,gBAAiB,UACjBC,MAAO,QAEXE,YAAa,CACTH,gBAAiB,UACjBC,MAAO,QAEXG,eAAgB,CACZJ,gBAAiB,UACjBC,MAAO,QAEXI,QAAS,CACLC,QAAS,OACTC,WAAY,UAEhBhC,YAAa,CACTiC,SAAU,WACVC,UAAW,gBACXxC,IAAK,EACLH,MAAO,EACPE,OAAQ,EACRD,KAAM,GAEVY,0BACKgB,EAAMe,YAAYC,KAAK,OAAQ,CAC5Bb,YAAaH,EAAMiB,QAAQ,GAC3BC,aAAclB,EAAMiB,QAAQ,OAGpC/B,gBAAiB,CACbiC,WAAYnB,EAAMoB,YAAYC,OAAO,CAAC,iBAAkB,CAAEC,OAAQ,SAClEC,UHpBiB,EGqBjBC,aHrBiB,GGuBrBrC,qBAAsB,CAClBoC,UHxB2B,EGyB3BC,aHzB2B,OG8C7BC,EAA4C,gBAAG1E,IAAAA,QAAY2E,mBACvDC,EAAUC,aACkBC,YAAS,GAApCC,OAAWC,OAElBC,aAAU,kBAAM,WACRL,EAAQM,SACRC,aAAaP,EAAQM,YAE1B,QAEGE,EAAc/C,EAAsB,CAACsC,EAAMU,MAAMC,QAASX,EAAMW,SAAUX,EAAMU,MAAMjF,KActFmF,EACF,CAAC,UAAW,aAAc,YAAa,SAAU,YAAa,YAAYlF,QAAO,SAACmC,EAAKgD,qBAChFhD,UAEFgD,GAASnD,EAAsB,CAACsC,EAAMU,MAAMG,GAASb,EAAMa,IAAUb,EAAMU,MAAMjF,WAClF,IAGJqF,EAUAd,EAVAc,OACAC,EASAf,EATAe,UASAf,EARAgB,aAAAA,aAAe,KACfC,EAOAjB,EAPAiB,gBACAC,EAMAlB,EANAkB,YACAR,EAKAV,EALAU,MACAtD,EAIA4C,EAJA5C,QAIA4C,EAHAmB,oBAAAA,aAAsBC,MAGtBpB,EAFAqB,gBAAiBC,aAAuB,KACrCC,IACHvB,+HAEYwB,EAAmDR,EAA3DF,OAAuBW,EAAoCT,EAApCS,UAAcC,IAAsBV,0BAG/DvF,EAWAiF,EAXAjF,IACAkG,EAUAjB,EAPA7E,QACS+F,EAMTlB,EANAK,QACQc,EAKRnB,EALAI,SAKAJ,EAJAM,aAAcc,aAAqB,KACnC/F,EAGA2E,EAHA3E,eAGA2E,EAFAW,gBAAiBU,aAAwB,KACtCC,IACHtB,2HAEEuB,EAAOf,EAAYrF,GAEnBqG,OACCR,KACAI,GACHhB,OAAQe,GAAgBC,EAAmBhB,QAAUU,GAAiBV,IAGpEqB,KACFC,UAAWvF,EAAuBd,IAC/BuF,KACAS,GACHM,SAtDuB,WACvBpC,EAAQM,QAAU+B,YAAW,WACzBjC,GAAcD,KACf,QAsDDmC,EAAkBL,EAAa,qBAAuB,kBAExDM,GAAcN,EAAapB,OACJ,mBAAhB0B,KAEPA,GAAcN,EAAapB,OAAOrF,QAGlCgH,GAAeb,GAAiBb,SAChC0B,IAAwC,mBAAjBA,KACvBA,GAAeA,GAAahH,EAAKiF,EAAM1B,UAIvClF,gBAAC4I,GACGC,iBACA1C,QAAS,OACLG,EACJ/E,QAAS8B,EAAoB9B,EAAS+B,GACtCiF,SAAUzB,EAAUyB,UAIpBvI,gBAAC8I,iBAEGzB,oBAAqBA,GACjBI,EACAS,GACJa,KAAMnC,EAAMmC,KACZ9G,aAAcA,EACdsF,gBAAiBc,EACjB9G,QAASyB,EAAezB,GACxBsF,QAASF,EACTqC,OAAQlC,EAAUkC,OAClBC,UAAWnC,EAAUmC,UACrBC,QAASpC,EAAUoC,QACnBC,WAAYrC,EAAUqC,WAGtBC,UAAWxF,EAAsB,CAACkD,EAAUsC,UAtGG,WACnDlD,EAAMU,MAAMyC,cACZ1C,EAAY,KAAMrE,EAAQgH,iBAuGrBX,IACG3I,gBAACuJ,iBACG5B,UAAWxE,EACP5B,YAAkBN,EAAWc,IAE7B4F,GAD0BR,GAAmBgB,GAA1C5G,EAAQmD,cAGX0D,sBACcK,EAClBvD,QACIlF,wBAAMwJ,GAAIf,EAAiBd,UAAWpG,EAAQ2D,SACxCiC,EAAyB,KAAPgB,EACnBvB,EAAM1B,SAGf8B,OAAQ0B,WAQjBe,aAAWlF,EAAXkF,CAAmBxD,GCvN5ByD,EAAWC,cAAW,SAAAnF,iBAAU,CAClCrE,SACIyJ,UAAW,aACXzE,QAAS,OACT0E,UAAW,OACXC,SAAU,OACVzE,SAAU,QACV0E,cAAe,SACfC,OAAQxF,EAAMwF,OAAOC,SACrBC,OAAQ,OACRC,MAAO,OACPC,SAAU,IACVzE,WAAYnB,EAAMoB,YAAYC,OAAO,CAAC,MAAO,QAAS,SAAU,QAAS,CAAEC,OAAQ,YAClFtB,EAAMe,YAAYC,KAAK,OAAQ,CAC5B5C,KAAM,eACND,MAAO,eACPwH,MAAO,WAGfE,eAAgB,CAAEN,cAAe,kBAEjCjH,IAAK,CAAEA,IAAKwH,IACZC,SAAU,CAAEzH,IAAKwH,GAEjBzH,OAAQ,CAAEA,OAAQyH,IAClBE,YAAa,CAAE3H,OAAQyH,GAEvB1H,KAAM,CAAEA,KJCS,IIAjB6H,UAAW,CAAE7H,KJAe,GIE5BD,MAAO,CAAEA,MJFQ,IIGjB+H,WAAY,CAAE/H,MJHc,GIK5BgI,WACI/H,KAAM,MACN0C,UAAW,sBACVd,EAAMe,YAAYC,KAAK,OAAQ,CAC5BF,UAAW,wBAajBsF,EAAsD,SAAC1E,OACnD3E,EAAUmI,IACR/B,EAA6CzB,EAA7CyB,UAAW1F,EAAkCiE,EAAlCjE,aAAcqB,EAAoB4C,EAApB5C,MAAUmE,IAAUvB,wCAE/C2E,EAAoB1H,EACtB5B,EAAQpB,KACRoB,EAAQU,EAAaC,UACrBX,EAAQU,EAAaE,YAErBZ,EAAWU,EAAaC,UAAWoB,EAAQ,QAAU,KAErD/B,EAAWU,EAAaE,YAAamB,EAAQ,QAAU,KAEvDqE,EADsD,WAA1B1F,EAAaC,UAAtCX,EAAQ8I,uBAKXrK,qCAAK2H,UAAWkD,GAAuBpD,OAIhCzH,EAAM8K,KAAKF,GCvEpBG,EAAkB,SAAA7E,UACpBlG,gBAACgL,mBAAY9E,GACTlG,wBAAMiL,EAAE,mIAKVC,EAAoB,SAAAhF,UACtBlG,gBAACgL,mBAAY9E,GACTlG,wBAAMiL,EAAE,wDAIVE,EAAkB,SAAAjF,UACpBlG,gBAACgL,mBAAY9E,GACTlG,wBAAMiL,EAAE,mOAMVG,EAAiB,SAAAlF,UACnBlG,gBAACgL,mBAAY9E,GACTlG,wBAAMiL,EAAE,yHAKVI,EAAa,CACfC,SAAU,GACVC,gBAAiB,GAGfC,EAAoD,CACtDC,QAASzL,gBAAC+K,GAAUW,MAAOL,IAC3BM,QAAS3L,gBAACkL,GAAYQ,MAAOL,IAC7BO,MAAO5L,gBAACmL,GAAUO,MAAOL,IACzBQ,KAAM7L,gBAACoL,GAASM,MAAOL,+DCbXnF,8BACFA,0BAmBQ,SAAChB,oBAAiF,QAArDvD,IAAAA,IAAKmK,IAAAA,iBAAqBC,kCAC/DC,EAAkBrK,GAAe,IAARA,EACzB6H,EAAKwC,EAAmBrK,GAAsB,IAAIsK,MAAOC,UAAYC,KAAKC,SAE1EC,ENYO,SAACN,EAAS7F,EAAOoG,UAAa,SAACC,SACnC,qBAATA,EACInK,EAAa2J,EAAQ/J,kBAA0B+J,EAAQ/J,iBACvDI,EAAa8D,EAAMlE,kBAA0BkE,EAAMlE,iBAChDF,EAASE,iBAGb+J,EAAQQ,IAASrG,EAAMqG,IAASD,EAASC,IMnB7BC,CAAMT,EAASU,EAAKvG,MAAOpE,GACpC8E,KACFjF,IAAK6H,GACFuC,GACH7G,QAAAA,EACA6D,MAAM,EACN2D,SAAS,EACTrD,cAAc,EACdtH,QAASsK,EAAO,WAChBpK,aAAcoK,EAAO,gBACrBrK,iBAAkBqK,EAAO,6BAGzBN,EAAQlE,UACRjB,EAAM5E,sBAAmBkB,KAGxByJ,UAAS,SAACC,WACe1J,IAArB4I,GAAkCW,EAAKvG,MAAM4F,kBAAqBA,EAAkB,KAC/Ee,EAAkB,SAACC,UACrBd,EAAkBc,EAAKnL,MAAQA,EAAMmL,EAAK5H,UAAYA,GAGpD6H,EAAUH,EAAMI,MAAMC,UAAUJ,IAAoB,EACpDK,EAASN,EAAMO,OAAOF,UAAUJ,IAAoB,KACtDE,GAAWG,SACJN,SAIRH,EAAKW,wBACLR,GACHI,gBAAWJ,EAAMI,OAAOpG,UAIzB4C,wBAOmB,SAACoD,UACRA,EAAXO,OACGE,QAAUZ,EAAKa,SACfb,EAAKc,oBAAoBX,GAE7BH,EAAKe,aAAaZ,mBAML,SAACA,OACbI,EAAkBJ,EAAlBI,aACJA,EAAMK,OAAS,OAERT,GACHO,iBAJkBP,EAAXO,QAIaH,EAAM,KAC1BA,MAAOA,EAAM3L,MAAM,EAAG2L,EAAMK,UAG7BT,yBAWoB,SAACA,MACxBA,EAAMO,OAAOM,MAAK,SAAAX,UAASA,EAAK/D,MAAQ+D,EAAKzD,uBACtCuD,MAGPc,GAAS,EACTC,GAAS,EAEWf,EAAMO,OAAOvL,QAAO,SAACmC,EAAK0C,UAC9C1C,GAAO0C,EAAQsC,MAAQtC,EAAQoB,QAAU,EAAI,KAC9C,KAEqB4E,EAAKa,WAEzBK,GAAS,OAGPR,EAASP,EAAMO,OAAOS,KAAI,SAACd,UACxBY,GAAYZ,EAAKjF,UAAW8F,OAmBrBb,IAlBRY,GAAS,EAEJZ,EAAKJ,SAONI,EAAKjG,SAASiG,EAAKjG,QAAQ,KAAMvE,EAAQE,SAAUsK,EAAKnL,KACxD8K,EAAKvG,MAAMW,SAAS4F,EAAKvG,MAAMW,QAAQ,KAAMvE,EAAQE,SAAUsK,EAAKnL,UAGjEmL,GACH/D,MAAM,UAVC+D,GACHzD,cAAc,oBAgBlBuD,GAAOO,OAAAA,0BAMmC,SAACU,EAAMC,EAAanM,OACrEA,QACK,IAAIoM,MAAM,4DAGfpB,UAAS,kBAAiB,CAC3BQ,SADaA,OACES,KAAI,SAAAd,UACfA,EAAKnL,MAAQA,OAAWmL,GAAMJ,SAAS,SAAcI,8BAQX,SAACkB,EAAOC,EAAQtM,MAC9D8K,EAAKvG,MAAMW,WACNX,MAAMW,QAAQmH,EAAOC,EAAQtM,GAGlCsM,IAAW3L,EAAQC,eACjB2L,OAAyBhL,IAARvB,IAElBgL,UAAS,gBAAWK,IAAAA,YAAa,CAClCG,SADaA,OACES,KAAI,SAACd,UACXoB,GAAkBpB,EAAKnL,MAAQA,OAKzBmL,EADJA,EAAKJ,SACK3D,MAAM,IACNM,cAAc,SALfyD,MAOpBE,MAAOA,EAAMtL,QAAO,SAAAoL,UAAQA,EAAKnL,MAAQA,2BAOC,SAACA,OAEzCwM,EAAa1B,EAAKG,MAAMO,OAAOiB,MAAK,SAAAtB,UAAQA,EAAKnL,MAAQA,KAC3DA,GAAOwM,GAAcA,EAAWtH,SAChCsH,EAAWtH,QAAQ,KAAMvE,EAAQG,WAAYd,KAG5C0M,iBAAiB,KAAM/L,EAAQG,WAAYd,wBAWI,SAACqM,EAAOM,EAAMC,OAC5D5M,EAAM2M,GAAQC,MACf5M,QACK,IAAIoM,MAAM,2DAGfpB,UAAS,SAACC,OACL4B,EAAW/B,EAAKe,kBACfZ,GACHO,OAAQP,EAAMO,OAAOzL,QAAO,SAAAoL,UAAQA,EAAKnL,MAAQA,eAGvB,IAA1B6M,EAASxB,MAAMK,OACRmB,EAGJ/B,EAAKc,oBAAoBiB,SAxN/B5B,MAAQ,CACTO,OAAQ,GACRH,MAAO,GACPyB,aAAc,CACVC,gBAAiBjC,EAAKiC,gBACtBC,cAAelC,EAAKkC,4HAuNhCC,OAAA,sBACYH,EAAiBnK,KAAKsI,MAAtB6B,eAYJnK,KAAK4B,MAVLnE,IAIA8M,QACAC,IAAAA,aACAvN,QAAAA,aAAU,SACV+B,MAAAA,oBACA6D,gBAAAA,gBACGjB,yHAGD6I,EAAQzK,KAAKsI,MAAMO,OAAOvL,QAAyB,SAACmC,EAAK0C,SNnOpCuI,EMoOjBC,KNnOXhO,GAD4B+N,EMoOavI,EAAQxE,cNnO/BC,UAAYjB,EAAW+N,EAAO7M,wBMsOpC4B,UACFkL,aAHsBlL,EAAIkL,IAAa,IAGJxI,UAEzC,IAEGW,OACCoE,KACAlH,KAAK4B,MAAMkB,aAGZ8H,EAAY1N,OAAOC,KAAKsN,GAAOnB,KAAI,SAACuB,OAChChC,EAAS4B,EAAMI,UAEjBnP,gBAAC4K,GACGjJ,IAAKwN,EACL7L,MAAOA,EACPrB,aAAckL,EAAO,GAAGlL,aACxB0F,UAAWxE,EACP5B,EAAQb,cACRa,0BAAgC4N,KAGnChC,EAAOS,KAAI,SAAAhH,UACR5G,gBAACiG,mBACOC,GACJvE,IAAKiF,EAAMjF,IACX2B,MAAOA,EACPsD,MAAOA,EACPO,gBAAiBA,EACjBC,YAAaA,EACb7F,QAASD,EAAkBC,GAC3BsF,QAASuI,EAAKf,iBACd9F,SAAU3E,EAAsB,CAACwL,EAAKC,kBAAmBD,EAAKlJ,MAAMqC,WACpEa,UAAWxF,EAAsB,CAACwL,EAAKE,mBAAoBF,EAAKlJ,MAAMkD,6BAQtFpJ,gBAACuP,EAAgBC,UAASC,MAAOhB,GAC5BK,EACAD,EAAUa,eAAaR,EAAWL,GAAWK,8CA/Q/C5K,KAAK4B,MAAMoH,UAAY,8LAdPqC,mDCzBOC,aAAWL,yBCC5B,SAACI,OACZE,EAAmB7P,EAAM8P,YAAW,SAAC5J,EAAO6J,UAC9C/P,gBAACuP,EAAgBS,eACZ,SAAAC,UACGjQ,gBAAC2P,OACOzJ,GACJ6J,IAAKA,EACLrB,gBAAiBuB,EAAQvB,gBACzBC,cAAesB,EAAQtB,8BAUvCuB,EAAqBL,EAAkBF,GAEhCE"}